// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BookServiceQA.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NewBook")]
    public partial class NewBookFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "NewBook.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "NewBook", "\tAs a librarian\r\n\tI want to be able to add new books\r\n\tIn order to keep the book " +
                    "store interesting", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a new book")]
        [NUnit.Framework.CategoryAttribute("NewBook")]
        [NUnit.Framework.CategoryAttribute("Imperative")]
        public virtual void AddANewBook()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new book", new string[] {
                        "NewBook",
                        "Imperative"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I am on the Book list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Author",
                        "Title",
                        "Year",
                        "Genre",
                        "Price"});
            table1.AddRow(new string[] {
                        "Dante Alighieri",
                        "Inferno",
                        "1304",
                        "Novel",
                        "459.99"});
#line 10
 testRunner.And("I have entered the following values on the Add Book form", ((string)(null)), table1, "And ");
#line 13
 testRunner.When("I press Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("the new book is displayed in the book list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Decimal values are not allowed in the Year field")]
        [NUnit.Framework.CategoryAttribute("NewBook")]
        [NUnit.Framework.CategoryAttribute("Imperative")]
        public virtual void DecimalValuesAreNotAllowedInTheYearField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Decimal values are not allowed in the Year field", new string[] {
                        "NewBook",
                        "Imperative"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("I am on the Book list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Author",
                        "Title",
                        "Year",
                        "Genre",
                        "Price"});
            table2.AddRow(new string[] {
                        "Giovanni Boccaccio",
                        "Comedia delle ninfe fiorentine",
                        "1342.33",
                        "Classic",
                        "9.99"});
#line 19
 testRunner.And("I have entered the following values on the Add Book form", ((string)(null)), table2, "And ");
#line 22
 testRunner.When("I press Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("I will not be able to add the book", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Mandatory fields")]
        [NUnit.Framework.CategoryAttribute("NewBook")]
        [NUnit.Framework.CategoryAttribute("Imperative")]
        [NUnit.Framework.TestCaseAttribute("Giovanni Boccaccio", "n/a", "1335", "Poem", "55", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Dante Alighieri", "Vita Nova", "n/a", "Prosimetrum", "99", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Alessandro Manzoni", "Adelchi", "1822", "Tragedy", "n/a", new string[0])]
        public virtual void MandatoryFields(string author, string title, string year, string genre, string price, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NewBook",
                    "Imperative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Mandatory fields", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I am on the Book list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And(string.Format("I have entered {0}, {1}, {2}, {3} and {4}", author, title, year, genre, price), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I press Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("I will not be able to add the book", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And("an error message will be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
